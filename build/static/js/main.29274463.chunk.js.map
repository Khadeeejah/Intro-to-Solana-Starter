{"version":3,"sources":["App.js","index.js"],"names":["App","useState","walletAddress","setWalletAddress","checkIfWalletIsConnected","window","solana","isPhantom","console","log","connect","onlyIfTrusted","response","publicKey","toString","alert","error","connectWallet","useEffect","onLoad","addEventListener","removeEventListener","className","toastOptions","duration","style","border","padding","color","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAmGeA,EA1FH,WAEV,MAA0CC,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAMMC,EAAwB,iDAAG,gHAEVC,SAAXC,EAFqB,EAErBA,QAFqB,qBAKvBA,EAAOC,UALgB,wBAMzBC,QAAQC,IAAI,yBANa,SAQFH,EAAOI,QAAQ,CAAEC,eAAe,IAR9B,OAQnBC,EARmB,OASzBJ,QAAQC,IACN,6BACAG,EAASC,UAAUC,YAErBX,EAAiBS,EAASC,UAAUC,YAbX,gCAgB3BC,MACE,6EAjByB,0DAqB7BP,QAAQQ,MAAR,MArB6B,0DAAH,qDAyBxBC,EAAa,iDAAG,uGACDZ,SAAXC,EADY,EACZA,QADY,gCAIKA,EAAOI,UAJZ,OAIZE,EAJY,OAKlBJ,QAAQC,IAAI,6BAA8BG,EAASC,UAAUC,YAC7DX,EAAiBS,EAASC,UAAUC,YANlB,2CAAH,qDAmCnB,OARAI,qBAAU,WACR,IAAMC,EAAM,iDAAG,wGACPf,IADO,2CAAH,qDAIZ,OADAC,OAAOe,iBAAiB,OAAQD,GACzB,kBAAMd,OAAOgB,oBAAoB,OAAQF,EAAzC,CACR,GAAE,IAGD,qBAAKG,UAAU,MAAf,SACE,sBAAKA,UAAWpB,EAAgB,mBAAqB,YAArD,UACE,cAAC,UAAD,CACEqB,aAAc,CACZD,UAAW,GACXE,SAAU,IACVC,MAAO,CACLC,OAAQ,oBACRC,QAAS,OACTC,MAAO,cAIb,qBAAKN,UAAU,mBAAf,UACIpB,GAvCR,sBAAKoB,UAAU,YAAf,UACE,wBACEA,UAAU,mCACVO,QAASZ,EAFX,qBAMA,mBAAGK,UAAU,SAAb,0BACA,mBAAGA,UAAU,aAAb,qDACA,qBAAKA,UAAU,SACf,qBAAKA,UAAU,kBAkCpB,EC5FDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.29274463.chunk.js","sourcesContent":["//IMPORTS\nimport React, { useEffect, useState } from \"react\";\nimport { Connection, PublicKey, clusterApiUrl } from \"@solana/web3.js\";\nimport { Program, Provider, web3 } from \"@project-serum/anchor\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport \"./App.css\";\n\n//CONSTANTS\n\nconst App = () => {\n  //useSTATE\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  //TOASTS\n\n  //ACTIONS\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const { solana } = window;\n\n      if (solana) {\n        if (solana.isPhantom) {\n          console.log(\"Phantom wallet found!\");\n\n          const response = await solana.connect({ onlyIfTrusted: true });\n          console.log(\n            \"Connected with Public Key:\",\n            response.publicKey.toString()\n          );\n          setWalletAddress(response.publicKey.toString());\n        }\n      } else {\n        alert(\n          \"To sign in, download a Phantom Wallet ðŸ‘» at https://phantom.app\"\n        );\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const connectWallet = async () => {\n    const { solana } = window;\n\n    if (solana) {\n      const response = await solana.connect();\n      console.log(\"Connected with Public Key:\", response.publicKey.toString());\n      setWalletAddress(response.publicKey.toString());\n    }\n  };\n\n  const renderNotConnectedContainer = () => (\n    <div className=\"container\">\n      <button\n        className=\"cta-button connect-wallet-button\"\n        onClick={connectWallet}\n      >\n        SIGN IN\n      </button>\n      <p className=\"header\">Scene Portal</p>\n      <p className=\"sub-header\">Your favorite scenes, on the blockchain</p>\n      <div className=\"moon\" />\n      <div className=\"kiki\" />\n    </div>\n  );\n\n  //useEFFECTS\n\n  useEffect(() => {\n    const onLoad = async () => {\n      await checkIfWalletIsConnected();\n    };\n    window.addEventListener(\"load\", onLoad);\n    return () => window.removeEventListener(\"load\", onLoad);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className={walletAddress ? \"authed-container\" : \"container\"}>\n        <Toaster\n          toastOptions={{\n            className: \"\",\n            duration: 3000,\n            style: {\n              border: \"1px solid #713200\",\n              padding: \"16px\",\n              color: \"#713200\",\n            },\n          }}\n        />\n        <div className=\"header-container\">\n          {!walletAddress && renderNotConnectedContainer()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}